var fs = require('fs');


//module refernce caching
//cache[host+path] = 'moduleReference'   

function process(arg){
	return "args: "+arg;
}

module.exports = function(requestObject){
	var hostname, path, originalUrl, debug, layout, section, userAgent, device, params, brand;

	if(!requestObject){
		throw new Error("RequestContext() failed, missing required requestObject argument.");
	}
	this.setBrand = function(b){
		brand = b;
	}
	
	this.getBrand = function(){
		return brand;
	}

	this.isDebug = function(){
		return debug;
	}
	
	this.getDevice = function(){
		return device;
	}

	this.construct = function(requestObject){	
		hostname	= requestObject.hostname;
		originalUrl	= requestObject.originalUrl;
		debug		= typeof requestObject.query !== "undefined" && typeof requestObject.query.debug !== "undefined" ? requestObject.query.debug : false;

		layout		= false;
		section		= 'home';
		path		= requestObject.path;
		userAgent	= requestObject.headers['user-agent'];
		device		= requestObject.device || false;	
		device		= device.type || "desktop";
		params		= [];
		this.parseRoute(requestObject.params);
	}
	/*
	 *
	 *
	 *
	 *
	 *
	 * */
	this.parseRoute = function(reqParams){
		for(var key in reqParams){
			params.push(reqParams[key]);
		}
		return true;
	}
	//prevent consumers from modifying array	
	this.getParams = function(){
		return JSON.parse(JSON.stringify(params));
	}
	this.getHostName = function(){
		return hostname;
	}

	this.getPath = function(){
		return path;
	}

	this.construct(requestObject);
}
